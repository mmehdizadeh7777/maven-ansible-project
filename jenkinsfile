pipeline {
    agent any
	tools {
		maven 'local-maven'
	}
	parameters {
    		booleanParam(name: 'executeGitpush', defaultValue: false, description: '')
    }

    stages {
                stage('build') {
                    steps {
                        echo 'building....'
                        sh 'mvn clean package'
                        sh 'mvn package'
                    }
                }
                stage("Clone Git Repository") {
                     when{
                        expression {
                            params.executeGitpush
                         }
                     }
                    steps {
                        echo "adding war file from jenkins into gitHub"
                        git(
                            url: "https://github.com/mmehdizadeh7777/maven-ansible-project.git",
                            branch: "main",
                            changelog: true,
                            poll: true
                        )
                        sh 'git config --global user.name "Jenkins Pipeline"'
                        sh 'git config --global user.email "jenkins@localhost"'
                        sh 'git add /var/lib/jenkins/workspace/java-app-project/target/SampleServlet.war -f'
                        sh 'git commit -m "jenkins: adding war file"'
                         withCredentials([gitUsernamePassword(credentialsId: 'github-token', gitToolName: 'git-tool')]){
                               sh 'git push -u origin main'
                         }
                    }
                }

                stage('copy war file in EC2') {
                            steps {
                                echo "copying war file in EC2 folder"
                                script{
                                    def gitcmd = 'git clone https://github.com/mmehdizadeh7777/maven-ansible-project.git --depth 1 --branch=main ./result'
                                    sshagent(['ec2-server-key']) {
                                      sh "ssh -o StrictHostKeyChecking=no ubuntu@3.82.146.38 ${gitcmd}"

                                    }
                                }

                            }
                }

                stage('Ansible Deploy on ec2') {

                   steps {
                           echo "deploying ansible playbook on ec2"
                           sh "ansible-playbook /var/lib/jenkins/workspace/java-app-project/roles/tomcat/tasks/main.yaml -i my-inventory  --key-file ~/.ssh/id_rsa"
                   }
                }
    }
}